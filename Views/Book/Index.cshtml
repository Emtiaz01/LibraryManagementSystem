@* Book/index.cshtml *@ 
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@model IEnumerable<LibraryManagementSystem.Models.BookViewModel>

@{
    Layout = "~/Views/Shared/UserLayout.cshtml";
    ViewData["Title"] = "Book List";
}
<div class="container-fluid px-3">
    <h2 class="mb-4">Book List</h2>

    <div class="d-flex justify-content-end mb-3">
        <a asp-action="CreateBook" class="btn btn-success">Add Book</a>
    </div>

    <div class="table-responsive shadow-sm rounded-4 border border-2 border-light-subtle p-3 bg-white">
        <table class="table table-hover align-middle text-center table-bordered">
            <thead class="table-dark text-white">
                <tr>
                    <th scope="col">Book ID</th>
                    <th scope="col">Title</th>
                    <th scope="col">Author</th>
                    <th scope="col">ISBN</th>
                    <th scope="col">Publisher</th>
                    <th scope="col">Published</th>
                    <th scope="col">Total</th>
                    <th scope="col">Available</th>
                    <th scope="col">Category</th>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <th scope="col">Borrow Records</th>
                        <th scope="col">Cover</th>
                        <th scope="col">Actions</th>

                    }
                    else
                    {
                        <th scope="col">Cover</th>
                        <th scope="col">Actions</th>
                    }
                    @* <th scope="col">Borrow Records</th> *@
                    
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    foreach (var book in Model)
                    {
                        <tr>
                            <td class="fw-bold">@book.BookId</td>
                            <td>@book.Title</td>
                            <td>@book.Author</td>
                            <td>@book.ISBN</td>
                            <td>@book.PublisherName</td>
                            <td>@book.PublishedDate.ToString("dd MMM yyyy")</td>
                            <td>@book.TotalCopies</td>
                            <td>@book.AvailableCopies</td>
                            <td>@book.CategoryName</td>
                            @if (SignInManager.IsSignedIn(User))
                            {
                                <td class="text-start">
                                    @if (book.BorrowRecords != null && book.BorrowRecords.Any())
                                    {
                                        <ul class="list-unstyled">
                                            @foreach (var record in book.BorrowRecords)
                                            {
                                                <li class="mb-2 p-2 rounded bg-light border border-1 border-secondary-subtle">
                                                    <span class="d-block"><strong>Borrowed:</strong> @record.BorrowDate.ToString("dd MMM yyyy")</span>
                                                    <span class="d-block"><strong>Return:</strong> @(record.ReturnDate != DateTime.MinValue ? record.ReturnDate.ToString("dd MMM yyyy") : "Not Returned")</span>
                                                    @* <span class="d-block"><strong>Due:</strong> @record.DueDate.ToString("dd MMM yyyy")</span>
                                                <span class="d-block"><strong>Fine:</strong> $@record.FineAmount.ToString("0.00")</span> *@
                                                </li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <span class="text-muted fst-italic">No Records</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(book.CoverImageURL))
                                    {
                                        <img src="@book.CoverImageURL" alt="Cover" width="5000" height="4000" class="img-fluid rounded shadow-sm border border-1" />
                                    }
                                    else
                                    {
                                        <span>No Image</span>
                                    }
                                </td>
                            }
                            @* <td class="text-start">
                                @if (book.BorrowRecords != null && book.BorrowRecords.Any())
                                {
                                    <ul class="list-unstyled">
                                        @foreach (var record in book.BorrowRecords)
                                        {
                                            <li class="mb-2 p-2 rounded bg-light border border-1 border-secondary-subtle">
                                                <span class="d-block"><strong>Borrowed:</strong> @record.BorrowDate.ToString("dd MMM yyyy")</span>
                                                <span class="d-block"><strong>Return:</strong> @(record.ReturnDate != DateTime.MinValue ? record.ReturnDate.ToString("dd MMM yyyy") : "Not Returned")</span>
                                                @* <span class="d-block"><strong>Due:</strong> @record.DueDate.ToString("dd MMM yyyy")</span>
                                                <span class="d-block"><strong>Fine:</strong> $@record.FineAmount.ToString("0.00")</span> 
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <span class="text-muted fst-italic">No Records</span>
                                }
                            </td> *@
                            <td>
                                @if (!string.IsNullOrEmpty(book.CoverImageURL))
                                {
                                    <img src="@book.CoverImageURL" alt="Cover" width="5000" height="4000" class="img-fluid rounded shadow-sm border border-1" />
                                }
                                else
                                {
                                    <span>No Image</span>
                                }
                            </td>
                            <td>
                                <div class="d-flex flex-column gap-2">
                                    <a asp-action="EditBook" asp-route-id="@book.BookId" class="btn btn-sm btn-outline-warning w-100">Edit</a>
                                    <button type="button" class="btn btn-sm btn-outline-danger w-100 delete-btn" data-id="@book.BookId" data-title="@book.Title">
                                        Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="12" class="text-muted fst-italic">No books available.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    </div>
</div>

<!-- SweetAlert + jQuery -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $('.delete-btn').click(function () {
            const bookId = $(this).data('id');
            const title = $(this).data('title');

            Swal.fire({
                title: 'Are you sure?',
                html: `Do you want to delete <strong>${title}</strong>?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Book/DeleteBook',
                        type: 'POST',
                        data: { id: bookId },
                        success: function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: `${title} has been deleted.`,
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function () {
                            Swal.fire('Error!', 'Something went wrong.', 'error');
                        }
                    });
                }
            });
        });
    });
</script>
